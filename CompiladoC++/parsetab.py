
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AND_EQ ASM ASSIGNMENT ATOI AUTO BIT_AND BIT_NOT BIT_OR BIT_XOR BOOL BREAK CALLOC CASE CATCH CERR CHAR CHAR_CONST CIN CLASS COLON COMMA CONST CONST_CAST CONTINUE COUT DEFAULT DELETE DEREF DEREF_ONE DEREF_TWO DIVIDE DIVIDE_EQ DO DOLAR DOUBLE DYNAMIC_CAST ELSE ENUM EQUAL EXIT EXPLICIT EXPORT EXTERN FALSE FLOAT FLOATNUM FOR FRIEND GETS GOTO GT GTEQ HASH ID IF INCLUDE INLINE INT INTNUM KEYWORD LEFTCURLYBRACKET LEFTSQRBRACKET LONG LPAREN LSHIFT LSHIFT_EQ LT LTEQ MAIN MALLOC MINUSMINUS MINUS_EQ MOD MOD_EQ MULT_EQ MUTABLE NAMESPACE NEQUAL NEW NOT OPERATOR OR OR_EQ PLUSPLUS PLUS_EQ PREDEFINED_FUNCTION PRIVATE PROTECTED PUBLIC PUTS QUES_MARK REALLOC REGISTER REINTERPRET_CAST RETURN RIGHTCURLYBRACKET RIGHTSQRBRACKET RPAREN RSHIFT RSHIFT_EQ SHORT SIGNED SIZEOF STATIC STATIC_CAST STD STRING STRUCT SWITCH TEMPLATE TERMINAL THIS THROW TIMES TRUE TRY TYPEDEF TYPEID TYPENAME UNION UNSIGNED USING U_MINUS U_PLUS VIRTUAL VOID VOLATILE WCHAR_T WHILE XOR_EQmainFunc : INT DOLAR MAIN LPAREN RPAREN statementexpression : assignmentExpression\n               \t\t| expression COMMA assignmentExpressionassignmentExpression : conditionalExpression\n\t\t\t\t| unaryExpression assignOper assignmentExpressionunaryExpression : postfixExpression \n\t\t\t| PLUSPLUS unaryExpression\n\t\t\t| MINUSMINUS unaryExpression\n\t\t\t| unaryOper unaryExpression\n\t\t\t| SIZEOF unaryExpression\n\t\t\t| SIZEOF LPAREN simpleTypeName RPAREN primaryExpression : markid \n                       | constant\n                       | markstr STRING\n                       | LPAREN expression RPAREN markid : identifiermarkstr : postfixExpression : primaryExpression\n\t\t\t| postfixExpression LEFTSQRBRACKET expression RIGHTSQRBRACKET\n\t\t\t| postfixExpression PLUSPLUS\n\t\t\t| postfixExpression MINUSMINUSconstant : markint INTNUM\n\t\t| markfloat FLOATNUM\n\t\t| markchar CHAR_CONSTmarkint : emptymarkfloat : emptymarkchar : emptyassignOper : ASSIGNMENT\n\t\t\t| MULT_EQ\n\t\t\t |  DIVIDE_EQ\n\t\t\t | MOD_EQ\n\t\t\t | PLUS_EQ \n\t\t\t | MINUS_EQ\n\t\t\t | GTEQ\n\t\t\t | LTEQ\n\t\t\t | AND_EQ\n\t\t\t | XOR_EQ\n\t\t\t | OR_EQ conditionalExpression : logicalOrExpression \n                          | logicalOrExpression QUES_MARK expression COLON conditionalExpressionlogicalOrExpression : logicalAndExpression \n\t\t\t\t| logicalOrExpression  OR   logicalAndExpressionlogicalAndExpression : inclusiveOrExpression \n\t\t\t\t| logicalAndExpression  AND   inclusiveOrExpressioninclusiveOrExpression : exclusiveOrExpression \n\t\t\t| inclusiveOrExpression BIT_OR exclusiveOrExpressionexclusiveOrExpression : andExpression \n\t\t\t| exclusiveOrExpression BIT_XOR andExpressionandExpression : equalityExpression \n\t\t\t| andExpression BIT_AND equalityExpressionequalityExpression : relationalExpression \n\t\t\t| equalityExpression EQUAL relationalExpression\n\t\t\t| equalityExpression NEQUAL relationalExpressionrelationalExpression : shiftExpression\n\t\t\t| relationalExpression LT shiftExpression\n\t\t\t| relationalExpression GT shiftExpression\n\t\t\t| relationalExpression LTEQ shiftExpression\n\t\t\t| relationalExpression GTEQ shiftExpressionshiftExpression : additiveExpression\n\t\t\t| shiftExpression LSHIFT additiveExpression\n\t\t\t| shiftExpression RSHIFT additiveExpressionadditiveExpression : multiplicativeExpression\n\t\t\t| additiveExpression U_PLUS multiplicativeExpression\n\t\t\t| additiveExpression U_MINUS multiplicativeExpressionmultiplicativeExpression : castExpression\n\t\t\t| multiplicativeExpression TIMES castExpression\n\t\t\t| multiplicativeExpression DIVIDE castExpression\n\t\t\t| multiplicativeExpression MOD castExpressioncastExpression : unaryExpression\n\t\t\t| LPAREN simpleTypeName RPAREN castExpressionunaryOper : TIMES\n\t\t\t| BIT_AND\n\t\t\t| U_PLUS\n\t\t\t| U_MINUS\n\t\t\t| NOT\n\t\t\t| BIT_NOTsimpleTypeName : CHAR\n\t\t\t| SHORT\n\t\t\t| INT\n\t\t\t| LONG\n\t\t\t| SIGNED\n\t\t\t| UNSIGNED\n\t\t\t| FLOAT\n\t\t\t| DOUBLE\n\t\t\t| VOIDempty :statement : labeledStatement\n\t\t\t| expressionStatement\n\t\t\t| compoundStatement\n\t\t\t| selectionStatement\n\t\t\t| jumpStatementlabeledStatement : identifier COLON statement\n\t\t\t| caseList default caseList : caseList CASE constantExpression COLON statement\n\t\t| emptydefault : DEFAULT defaultmark COLON statement enddefault\t\n\t\t| empty defaultmark : empty enddefault : empty constantExpression : conditionalExpression expressionStatement : expression TERMINAL\n\t\t\t| emptycompoundStatement : oscope declarationList statementList cscope\n\t\t\t| emptyoscope : LEFTCURLYBRACKETcscope : RIGHTCURLYBRACKETstatementList : statementList statement\n\t\t\t| empty declarationList : declarationList declaration\n\t\t\t| empty declaration :  decSpecList initDecList TERMINAL initDecList : initDecList COMMA markDec initDec\n\t\t\t| initDec markDec : empty decSpecList : decSpecList decSpec\n\t\t\t| decSpec  initDec : declarator\n                    | declarator ASSIGNMENT assignmentExpressiondeclarator : pointerList directDec pointerList : pointer\n\t\t\t| empty pointer : star typeQualList\n\t\t| empty\tstar : star TIMES\n\t\t| TIMES\t typeQualList : typeQualifier\n\t\t\t| empty directDec : identifier\n                      | identifier arrayDecarrayDec : arrayDec LEFTSQRBRACKET INTNUM RIGHTSQRBRACKET\t\n\t\t| LEFTSQRBRACKET INTNUM RIGHTSQRBRACKET\tidentifier : IDdecSpec : StorageClassSpec\n                          | simpleTypeName\n                          | typeQualifier  typeQualifier : CONST\n\t\t\t  | VOLATILE StorageClassSpec : AUTO\n                            | REGISTER\n                            | STATIC\n                            | EXTERN\n                            | TYPEDEF selectionStatement : IF LPAREN ifmark expression RPAREN statement endifmark \n\t\t\t| IF LPAREN ifmark expression RPAREN statement endifmark ELSE elsemark statement\n\t\t\t| SWITCH LPAREN switchmark expression RPAREN statement endswitchmarkifmark : empty endifmark : empty elsemark : empty switchmark : empty endswitchmark : empty jumpStatement : BREAK TERMINAL\n\t\t\t| CONTINUE TERMINAL\n\t\t\t| RETURN expression TERMINAL\n\t\t\t| RETURN TERMINAL\n\t\t\t| GOTO identifier TERMINAL'
    
_lr_action_items = {'INT':([0,7,18,27,61,62,63,64,65,66,67,68,69,79,80,110,138,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[2,63,-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,63,-110,63,63,-109,63,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'$end':([1,6,8,9,10,11,12,13,15,17,72,73,76,77,83,84,86,134,161,162,186,187,188,190,205,206,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[0,-86,-1,-87,-88,-89,-90,-91,-86,-95,-86,-93,-97,-101,-151,-152,-154,-92,-153,-155,-86,-86,-103,-106,-94,-86,-86,-86,-96,-99,-86,-86,-143,-147,-145,-150,-86,-86,-148,-144,]),'DOLAR':([2,],[3,]),'MAIN':([3,],[4,]),'LPAREN':([4,6,7,9,10,11,12,13,15,17,18,19,20,23,27,32,33,34,35,38,39,40,41,42,43,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,138,142,143,144,157,158,159,160,161,162,186,187,188,189,190,202,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[5,7,7,-87,-88,-89,-90,-91,-86,-95,-86,81,82,7,-105,106,106,106,110,-71,-72,-73,-74,-75,-76,7,-93,138,-97,-101,7,-86,-110,-86,-86,-151,-152,-154,7,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,7,138,7,7,7,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,-92,7,7,-109,-108,7,-146,7,-149,-153,-155,7,7,-103,-107,-106,138,-94,-86,-111,7,7,7,-96,-99,-86,-86,-143,-147,-145,-150,-86,7,-148,-144,]),'RPAREN':([5,25,26,28,29,30,31,36,37,44,45,46,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,103,104,105,107,108,109,113,115,116,117,132,137,141,163,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,200,201,203,204,218,],[6,-132,-2,-4,-69,-39,-6,-41,-18,-43,-12,-13,-45,-47,-49,-51,-54,-59,-62,-65,132,133,-77,-78,-79,-80,-81,-82,-83,-84,-85,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,-3,-5,-42,204,-44,-46,-48,-50,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,216,217,-19,-11,-40,]),'IF':([6,9,10,11,12,13,15,17,18,27,72,73,76,77,79,80,83,84,86,134,142,143,144,161,162,186,187,188,189,190,205,206,207,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[19,-87,-88,-89,-90,-91,-86,-95,-86,-105,19,-93,-97,-101,-86,-110,-151,-152,-154,-92,19,-109,-108,-153,-155,19,19,-103,-107,-106,-94,-86,-111,19,19,-96,-99,-86,-86,-143,-147,-145,-150,-86,19,-148,-144,]),'SWITCH':([6,9,10,11,12,13,15,17,18,27,72,73,76,77,79,80,83,84,86,134,142,143,144,161,162,186,187,188,189,190,205,206,207,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[20,-87,-88,-89,-90,-91,-86,-95,-86,-105,20,-93,-97,-101,-86,-110,-151,-152,-154,-92,20,-109,-108,-153,-155,20,20,-103,-107,-106,-94,-86,-111,20,20,-96,-99,-86,-86,-143,-147,-145,-150,-86,20,-148,-144,]),'BREAK':([6,9,10,11,12,13,15,17,18,27,72,73,76,77,79,80,83,84,86,134,142,143,144,161,162,186,187,188,189,190,205,206,207,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[21,-87,-88,-89,-90,-91,-86,-95,-86,-105,21,-93,-97,-101,-86,-110,-151,-152,-154,-92,21,-109,-108,-153,-155,21,21,-103,-107,-106,-94,-86,-111,21,21,-96,-99,-86,-86,-143,-147,-145,-150,-86,21,-148,-144,]),'CONTINUE':([6,9,10,11,12,13,15,17,18,27,72,73,76,77,79,80,83,84,86,134,142,143,144,161,162,186,187,188,189,190,205,206,207,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[22,-87,-88,-89,-90,-91,-86,-95,-86,-105,22,-93,-97,-101,-86,-110,-151,-152,-154,-92,22,-109,-108,-153,-155,22,22,-103,-107,-106,-94,-86,-111,22,22,-96,-99,-86,-86,-143,-147,-145,-150,-86,22,-148,-144,]),'RETURN':([6,9,10,11,12,13,15,17,18,27,72,73,76,77,79,80,83,84,86,134,142,143,144,161,162,186,187,188,189,190,205,206,207,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[23,-87,-88,-89,-90,-91,-86,-95,-86,-105,23,-93,-97,-101,-86,-110,-151,-152,-154,-92,23,-109,-108,-153,-155,23,23,-103,-107,-106,-94,-86,-111,23,23,-96,-99,-86,-86,-143,-147,-145,-150,-86,23,-148,-144,]),'GOTO':([6,9,10,11,12,13,15,17,18,27,72,73,76,77,79,80,83,84,86,134,142,143,144,161,162,186,187,188,189,190,205,206,207,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[24,-87,-88,-89,-90,-91,-86,-95,-86,-105,24,-93,-97,-101,-86,-110,-151,-152,-154,-92,24,-109,-108,-153,-155,24,24,-103,-107,-106,-94,-86,-111,24,24,-96,-99,-86,-86,-143,-147,-145,-150,-86,24,-148,-144,]),'ID':([6,7,9,10,11,12,13,15,17,18,23,24,27,32,33,34,35,38,39,40,41,42,43,61,62,63,64,65,66,67,68,69,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,186,187,188,189,190,192,195,196,197,198,199,202,205,206,207,208,209,212,213,214,215,216,217,219,220,221,222,226,227,231,232,233,234,237,239,240,241,],[25,25,-87,-88,-89,-90,-91,-86,-95,-86,25,25,-105,25,25,25,25,-71,-72,-73,-74,-75,-76,-77,-78,-79,-80,-81,-82,-83,-84,-85,25,-93,25,-97,-101,25,-86,-110,-86,-86,-151,-152,-154,25,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-92,25,25,-109,-108,-86,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,25,-146,25,-149,-153,-155,25,25,-103,-107,-106,-115,25,-120,-121,-86,-125,25,-94,-86,-111,-86,25,-122,-124,-126,-127,25,25,-96,-99,-86,-114,-86,-86,-143,-147,-145,-150,-86,25,-148,-144,]),'CASE':([6,9,10,11,12,13,15,17,18,27,72,73,76,77,79,80,83,84,86,134,142,143,144,161,162,186,187,188,189,190,205,206,207,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[-86,-87,-88,-89,-90,-91,74,-95,-86,-105,-86,-93,-97,-101,-86,-110,-151,-152,-154,-92,-86,-109,-108,-153,-155,-86,-86,-103,-107,-106,-94,-86,-111,-86,-86,-96,-99,-86,-86,-143,-147,-145,-150,-86,-86,-148,-144,]),'DEFAULT':([6,9,10,11,12,13,15,17,18,27,72,73,76,77,79,80,83,84,86,134,142,143,144,161,162,186,187,188,189,190,205,206,207,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[-86,-87,-88,-89,-90,-91,75,-95,-86,-105,-86,-93,-97,-101,-86,-110,-151,-152,-154,-92,-86,-109,-108,-153,-155,-86,-86,-103,-107,-106,-94,-86,-111,-86,-86,-96,-99,-86,-86,-143,-147,-145,-150,-86,-86,-148,-144,]),'INTNUM':([6,7,9,10,11,12,13,15,17,18,23,27,32,33,34,35,38,39,40,41,42,43,49,71,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,138,142,143,144,157,158,159,160,161,162,186,187,188,189,190,202,205,206,207,209,216,217,219,220,225,226,227,229,231,232,233,234,237,239,240,241,],[-86,-86,-87,-88,-89,-90,-91,-86,-25,-86,-86,-105,-86,-86,-86,-86,-71,-72,-73,-74,-75,-76,115,-25,-86,-93,-86,-97,-101,-86,-86,-110,-86,-86,-151,-152,-154,-86,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-92,-86,-86,-109,-108,-86,-146,-86,-149,-153,-155,-86,-86,-103,-107,-106,-86,-94,-86,-111,-86,-86,-86,-96,-99,230,-86,-86,235,-143,-147,-145,-150,-86,-86,-148,-144,]),'FLOATNUM':([6,7,9,10,11,12,13,15,17,18,23,27,32,33,34,35,38,39,40,41,42,43,50,71,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,138,142,143,144,157,158,159,160,161,162,186,187,188,189,190,202,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[-86,-86,-87,-88,-89,-90,-91,-86,-26,-86,-86,-105,-86,-86,-86,-86,-71,-72,-73,-74,-75,-76,116,-26,-86,-93,-86,-97,-101,-86,-86,-110,-86,-86,-151,-152,-154,-86,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-92,-86,-86,-109,-108,-86,-146,-86,-149,-153,-155,-86,-86,-103,-107,-106,-86,-94,-86,-111,-86,-86,-86,-96,-99,-86,-86,-143,-147,-145,-150,-86,-86,-148,-144,]),'CHAR_CONST':([6,7,9,10,11,12,13,15,17,18,23,27,32,33,34,35,38,39,40,41,42,43,51,71,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,138,142,143,144,157,158,159,160,161,162,186,187,188,189,190,202,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[-86,-86,-87,-88,-89,-90,-91,-86,-27,-86,-86,-105,-86,-86,-86,-86,-71,-72,-73,-74,-75,-76,117,-27,-86,-93,-86,-97,-101,-86,-86,-110,-86,-86,-151,-152,-154,-86,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-86,-92,-86,-86,-109,-108,-86,-146,-86,-149,-153,-155,-86,-86,-103,-107,-106,-86,-94,-86,-111,-86,-86,-86,-96,-99,-86,-86,-143,-147,-145,-150,-86,-86,-148,-144,]),'LEFTCURLYBRACKET':([6,9,10,11,12,13,15,17,18,27,72,73,76,77,79,80,83,84,86,134,142,143,144,161,162,186,187,188,189,190,205,206,207,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[27,-87,-88,-89,-90,-91,-86,-95,-86,-105,27,-93,-97,-101,-86,-110,-151,-152,-154,-92,27,-109,-108,-153,-155,27,27,-103,-107,-106,-94,-86,-111,27,27,-96,-99,-86,-86,-143,-147,-145,-150,-86,27,-148,-144,]),'PLUSPLUS':([6,7,9,10,11,12,13,14,15,17,18,23,25,27,31,32,33,34,35,37,38,39,40,41,42,43,45,46,70,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,142,143,144,157,158,159,160,161,162,186,187,188,189,190,202,203,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[32,32,-87,-88,-89,-90,-91,-16,-86,-95,-86,32,-132,-105,103,32,32,32,32,-18,-71,-72,-73,-74,-75,-76,-12,-13,-16,32,-93,32,-97,-101,32,-86,-110,-86,-86,-151,-152,-154,32,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,32,32,32,-20,-21,32,32,32,32,-14,32,-22,-23,-24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-15,32,-92,32,32,-109,-108,32,-146,32,-149,-153,-155,32,32,-103,-107,-106,32,-19,-94,-86,-111,32,32,32,-96,-99,-86,-86,-143,-147,-145,-150,-86,32,-148,-144,]),'MINUSMINUS':([6,7,9,10,11,12,13,14,15,17,18,23,25,27,31,32,33,34,35,37,38,39,40,41,42,43,45,46,70,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,142,143,144,157,158,159,160,161,162,186,187,188,189,190,202,203,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[33,33,-87,-88,-89,-90,-91,-16,-86,-95,-86,33,-132,-105,104,33,33,33,33,-18,-71,-72,-73,-74,-75,-76,-12,-13,-16,33,-93,33,-97,-101,33,-86,-110,-86,-86,-151,-152,-154,33,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,33,33,33,-20,-21,33,33,33,33,-14,33,-22,-23,-24,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-15,33,-92,33,33,-109,-108,33,-146,33,-149,-153,-155,33,33,-103,-107,-106,33,-19,-94,-86,-111,33,33,33,-96,-99,-86,-86,-143,-147,-145,-150,-86,33,-148,-144,]),'SIZEOF':([6,7,9,10,11,12,13,15,17,18,23,27,32,33,34,35,38,39,40,41,42,43,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,138,142,143,144,157,158,159,160,161,162,186,187,188,189,190,202,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[35,35,-87,-88,-89,-90,-91,-86,-95,-86,35,-105,35,35,35,35,-71,-72,-73,-74,-75,-76,35,-93,35,-97,-101,35,-86,-110,-86,-86,-151,-152,-154,35,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-92,35,35,-109,-108,35,-146,35,-149,-153,-155,35,35,-103,-107,-106,35,-94,-86,-111,35,35,35,-96,-99,-86,-86,-143,-147,-145,-150,-86,35,-148,-144,]),'TIMES':([6,7,9,10,11,12,13,14,15,17,18,23,25,27,29,31,32,33,34,35,37,38,39,40,41,42,43,45,46,57,58,61,62,63,64,65,66,67,68,69,70,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,137,138,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,180,181,182,183,184,185,186,187,188,189,190,192,198,199,202,203,204,205,206,207,208,209,213,216,217,219,220,221,222,226,227,231,232,233,234,237,239,240,241,],[38,38,-87,-88,-89,-90,-91,-16,-86,-95,-86,38,-132,-105,-69,-6,38,38,38,38,-18,-71,-72,-73,-74,-75,-76,-12,-13,129,-65,-77,-78,-79,-80,-81,-82,-83,-84,-85,-16,38,-93,38,-97,-101,38,-86,-110,-86,-86,-151,-152,-154,38,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,38,38,38,-20,-21,-7,38,-8,-9,-10,38,38,38,-14,38,-22,-23,-24,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-15,38,-92,-69,38,38,-109,-108,199,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,38,-146,38,-149,-153,-155,129,129,-66,-67,-68,-70,38,38,-103,-107,-106,-115,213,-125,38,-19,-11,-94,-86,-111,-86,38,-124,38,38,-96,-99,199,-114,-86,-86,-143,-147,-145,-150,-86,38,-148,-144,]),'BIT_AND':([6,7,9,10,11,12,13,14,15,17,18,23,25,27,29,31,32,33,34,35,37,38,39,40,41,42,43,45,46,52,53,54,55,56,57,58,70,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,137,138,142,143,144,157,158,159,160,161,162,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,202,203,204,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[39,39,-87,-88,-89,-90,-91,-16,-86,-95,-86,39,-132,-105,-69,-6,39,39,39,39,-18,-71,-72,-73,-74,-75,-76,-12,-13,118,-49,-51,-54,-59,-62,-65,-16,39,-93,39,-97,-101,39,-86,-110,-86,-86,-151,-152,-154,39,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,39,39,39,-20,-21,-7,39,-8,-9,-10,39,39,39,-14,39,-22,-23,-24,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-15,39,-92,-69,39,39,-109,-108,39,-146,39,-149,-153,-155,118,-50,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,39,39,-103,-107,-106,39,-19,-11,-94,-86,-111,39,39,39,-96,-99,-86,-86,-143,-147,-145,-150,-86,39,-148,-144,]),'U_PLUS':([6,7,9,10,11,12,13,14,15,17,18,23,25,27,29,31,32,33,34,35,37,38,39,40,41,42,43,45,46,56,57,58,70,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,137,138,142,143,144,157,158,159,160,161,162,178,179,180,181,182,183,184,185,186,187,188,189,190,202,203,204,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[40,40,-87,-88,-89,-90,-91,-16,-86,-95,-86,40,-132,-105,-69,-6,40,40,40,40,-18,-71,-72,-73,-74,-75,-76,-12,-13,127,-62,-65,-16,40,-93,40,-97,-101,40,-86,-110,-86,-86,-151,-152,-154,40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,40,40,40,-20,-21,-7,40,-8,-9,-10,40,40,40,-14,40,-22,-23,-24,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-15,40,-92,-69,40,40,-109,-108,40,-146,40,-149,-153,-155,127,127,-63,-64,-66,-67,-68,-70,40,40,-103,-107,-106,40,-19,-11,-94,-86,-111,40,40,40,-96,-99,-86,-86,-143,-147,-145,-150,-86,40,-148,-144,]),'U_MINUS':([6,7,9,10,11,12,13,14,15,17,18,23,25,27,29,31,32,33,34,35,37,38,39,40,41,42,43,45,46,56,57,58,70,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,137,138,142,143,144,157,158,159,160,161,162,178,179,180,181,182,183,184,185,186,187,188,189,190,202,203,204,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[41,41,-87,-88,-89,-90,-91,-16,-86,-95,-86,41,-132,-105,-69,-6,41,41,41,41,-18,-71,-72,-73,-74,-75,-76,-12,-13,128,-62,-65,-16,41,-93,41,-97,-101,41,-86,-110,-86,-86,-151,-152,-154,41,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,41,41,41,-20,-21,-7,41,-8,-9,-10,41,41,41,-14,41,-22,-23,-24,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-15,41,-92,-69,41,41,-109,-108,41,-146,41,-149,-153,-155,128,128,-63,-64,-66,-67,-68,-70,41,41,-103,-107,-106,41,-19,-11,-94,-86,-111,41,41,41,-96,-99,-86,-86,-143,-147,-145,-150,-86,41,-148,-144,]),'NOT':([6,7,9,10,11,12,13,15,17,18,23,27,32,33,34,35,38,39,40,41,42,43,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,138,142,143,144,157,158,159,160,161,162,186,187,188,189,190,202,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[42,42,-87,-88,-89,-90,-91,-86,-95,-86,42,-105,42,42,42,42,-71,-72,-73,-74,-75,-76,42,-93,42,-97,-101,42,-86,-110,-86,-86,-151,-152,-154,42,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-92,42,42,-109,-108,42,-146,42,-149,-153,-155,42,42,-103,-107,-106,42,-94,-86,-111,42,42,42,-96,-99,-86,-86,-143,-147,-145,-150,-86,42,-148,-144,]),'BIT_NOT':([6,7,9,10,11,12,13,15,17,18,23,27,32,33,34,35,38,39,40,41,42,43,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,138,142,143,144,157,158,159,160,161,162,186,187,188,189,190,202,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[43,43,-87,-88,-89,-90,-91,-86,-95,-86,43,-105,43,43,43,43,-71,-72,-73,-74,-75,-76,43,-93,43,-97,-101,43,-86,-110,-86,-86,-151,-152,-154,43,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-92,43,43,-109,-108,43,-146,43,-149,-153,-155,43,43,-103,-107,-106,43,-94,-86,-111,43,43,43,-96,-99,-86,-86,-143,-147,-145,-150,-86,43,-148,-144,]),'STRING':([6,7,9,10,11,12,13,15,17,18,23,27,32,33,34,35,38,39,40,41,42,43,47,72,73,74,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,138,142,143,144,157,158,159,160,161,162,186,187,188,189,190,202,205,206,207,209,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[-17,-17,-87,-88,-89,-90,-91,-86,-95,-86,-17,-105,-17,-17,-17,-17,-71,-72,-73,-74,-75,-76,113,-17,-93,-17,-97,-101,-17,-86,-110,-86,-86,-151,-152,-154,-17,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-92,-17,-17,-109,-108,-17,-146,-17,-149,-153,-155,-17,-17,-103,-107,-106,-17,-94,-86,-111,-17,-17,-17,-96,-99,-86,-86,-143,-147,-145,-150,-86,-17,-148,-144,]),'CHAR':([7,18,27,61,62,63,64,65,66,67,68,69,79,80,110,138,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[61,-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,61,-110,61,61,-109,61,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'SHORT':([7,18,27,61,62,63,64,65,66,67,68,69,79,80,110,138,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[62,-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,62,-110,62,62,-109,62,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'LONG':([7,18,27,61,62,63,64,65,66,67,68,69,79,80,110,138,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[64,-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,64,-110,64,64,-109,64,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'SIGNED':([7,18,27,61,62,63,64,65,66,67,68,69,79,80,110,138,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[65,-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,65,-110,65,65,-109,65,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'UNSIGNED':([7,18,27,61,62,63,64,65,66,67,68,69,79,80,110,138,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[66,-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,66,-110,66,66,-109,66,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'FLOAT':([7,18,27,61,62,63,64,65,66,67,68,69,79,80,110,138,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[67,-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,67,-110,67,67,-109,67,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'DOUBLE':([7,18,27,61,62,63,64,65,66,67,68,69,79,80,110,138,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[68,-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,68,-110,68,68,-109,68,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'VOID':([7,18,27,61,62,63,64,65,66,67,68,69,79,80,110,138,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[69,-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,69,-110,69,69,-109,69,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'RIGHTCURLYBRACKET':([9,10,11,12,13,15,17,18,27,72,73,76,77,79,80,83,84,86,134,142,143,144,161,162,186,187,188,189,190,205,206,207,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[-87,-88,-89,-90,-91,-86,-95,-86,-105,-86,-93,-97,-101,-86,-110,-151,-152,-154,-92,190,-109,-108,-153,-155,-86,-86,-103,-107,-106,-94,-86,-111,-86,-86,-96,-99,-86,-86,-143,-147,-145,-150,-86,-86,-148,-144,]),'ELSE':([9,10,11,12,13,15,17,72,73,76,77,83,84,86,134,161,162,186,187,188,190,205,206,216,217,219,220,226,227,231,232,233,234,237,239,240,241,],[-87,-88,-89,-90,-91,-86,-95,-86,-93,-97,-101,-151,-152,-154,-92,-153,-155,-86,-86,-103,-106,-94,-86,-86,-86,-96,-99,-86,-86,237,-147,-145,-150,-86,-86,-148,-144,]),'COLON':([14,25,26,28,29,30,31,36,37,44,45,46,48,52,53,54,55,56,57,58,70,75,103,104,105,107,108,109,113,115,116,117,132,135,136,137,139,140,141,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,218,],[72,-132,-2,-4,-69,-39,-6,-41,-18,-43,-12,-13,-45,-47,-49,-51,-54,-59,-62,-65,-16,-86,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,186,-100,-69,187,-98,-3,-5,202,-42,-44,-46,-48,-50,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,-40,]),'LEFTSQRBRACKET':([14,25,31,37,45,46,70,103,104,113,115,116,117,132,203,211,224,236,238,],[-16,-132,102,-18,-12,-13,-16,-20,-21,-14,-22,-23,-24,-15,-19,225,229,-131,-130,]),'ASSIGNMENT':([14,25,29,31,37,45,46,70,103,104,105,107,108,109,113,115,116,117,132,194,203,204,210,211,224,236,238,],[-16,-132,89,-6,-18,-12,-13,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,209,-19,-11,-119,-128,-129,-131,-130,]),'MULT_EQ':([14,25,29,31,37,45,46,70,103,104,105,107,108,109,113,115,116,117,132,203,204,],[-16,-132,90,-6,-18,-12,-13,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-19,-11,]),'DIVIDE_EQ':([14,25,29,31,37,45,46,70,103,104,105,107,108,109,113,115,116,117,132,203,204,],[-16,-132,91,-6,-18,-12,-13,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-19,-11,]),'MOD_EQ':([14,25,29,31,37,45,46,70,103,104,105,107,108,109,113,115,116,117,132,203,204,],[-16,-132,92,-6,-18,-12,-13,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-19,-11,]),'PLUS_EQ':([14,25,29,31,37,45,46,70,103,104,105,107,108,109,113,115,116,117,132,203,204,],[-16,-132,93,-6,-18,-12,-13,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-19,-11,]),'MINUS_EQ':([14,25,29,31,37,45,46,70,103,104,105,107,108,109,113,115,116,117,132,203,204,],[-16,-132,94,-6,-18,-12,-13,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-19,-11,]),'GTEQ':([14,25,29,31,37,45,46,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,95,-6,-18,-12,-13,124,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,124,124,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'LTEQ':([14,25,29,31,37,45,46,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,96,-6,-18,-12,-13,123,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,123,123,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'AND_EQ':([14,25,29,31,37,45,46,70,103,104,105,107,108,109,113,115,116,117,132,203,204,],[-16,-132,97,-6,-18,-12,-13,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-19,-11,]),'XOR_EQ':([14,25,29,31,37,45,46,70,103,104,105,107,108,109,113,115,116,117,132,203,204,],[-16,-132,98,-6,-18,-12,-13,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-19,-11,]),'OR_EQ':([14,25,29,31,37,45,46,70,103,104,105,107,108,109,113,115,116,117,132,203,204,],[-16,-132,99,-6,-18,-12,-13,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-19,-11,]),'DIVIDE':([14,25,29,31,37,45,46,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,180,181,182,183,184,185,203,204,],[-16,-132,-69,-6,-18,-12,-13,130,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,130,130,-66,-67,-68,-70,-19,-11,]),'MOD':([14,25,29,31,37,45,46,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,180,181,182,183,184,185,203,204,],[-16,-132,-69,-6,-18,-12,-13,131,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,131,131,-66,-67,-68,-70,-19,-11,]),'LSHIFT':([14,25,29,31,37,45,46,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,-69,-6,-18,-12,-13,125,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,125,125,125,125,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'RSHIFT':([14,25,29,31,37,45,46,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,-69,-6,-18,-12,-13,126,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,126,126,126,126,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'LT':([14,25,29,31,37,45,46,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,-69,-6,-18,-12,-13,121,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,121,121,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'GT':([14,25,29,31,37,45,46,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,-69,-6,-18,-12,-13,122,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,122,122,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'EQUAL':([14,25,29,31,37,45,46,53,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,-69,-6,-18,-12,-13,119,-51,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,119,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'NEQUAL':([14,25,29,31,37,45,46,53,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,-69,-6,-18,-12,-13,120,-51,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,120,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'BIT_XOR':([14,25,29,31,37,45,46,48,52,53,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,-69,-6,-18,-12,-13,114,-47,-49,-51,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,114,-48,-50,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'BIT_OR':([14,25,29,31,37,44,45,46,48,52,53,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,-69,-6,-18,112,-12,-13,-45,-47,-49,-51,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,112,-46,-48,-50,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'AND':([14,25,29,31,36,37,44,45,46,48,52,53,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,-69,-6,111,-18,-43,-12,-13,-45,-47,-49,-51,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,111,-44,-46,-48,-50,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'QUES_MARK':([14,25,29,30,31,36,37,44,45,46,48,52,53,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,-69,100,-6,-41,-18,-43,-12,-13,-45,-47,-49,-51,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,-42,-44,-46,-48,-50,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'OR':([14,25,29,30,31,36,37,44,45,46,48,52,53,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,],[-16,-132,-69,101,-6,-41,-18,-43,-12,-13,-45,-47,-49,-51,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,-42,-44,-46,-48,-50,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,]),'TERMINAL':([14,16,21,22,23,25,26,28,29,30,31,36,37,44,45,46,48,52,53,54,55,56,57,58,70,85,87,103,104,105,107,108,109,113,115,116,117,132,137,141,163,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,203,204,210,211,218,223,224,228,236,238,],[-16,77,83,84,86,-132,-2,-4,-69,-39,-6,-41,-18,-43,-12,-13,-45,-47,-49,-51,-54,-59,-62,-65,-16,161,162,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,-3,-5,-42,-44,-46,-48,-50,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,207,-113,-117,-19,-11,-119,-128,-40,-118,-129,-112,-131,-130,]),'COMMA':([14,16,25,26,28,29,30,31,36,37,44,45,46,48,52,53,54,55,56,57,58,59,70,85,103,104,105,107,108,109,113,115,116,117,132,137,141,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,191,193,194,200,201,203,204,210,211,218,223,224,228,236,238,],[-16,78,-132,-2,-4,-69,-39,-6,-41,-18,-43,-12,-13,-45,-47,-49,-51,-54,-59,-62,-65,78,-16,78,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,-3,-5,78,-42,78,-44,-46,-48,-50,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,208,-113,-117,78,78,-19,-11,-119,-128,-40,-118,-129,-112,-131,-130,]),'AUTO':([18,27,61,62,63,64,65,66,67,68,69,79,80,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,150,-110,-109,150,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'REGISTER':([18,27,61,62,63,64,65,66,67,68,69,79,80,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,151,-110,-109,151,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'STATIC':([18,27,61,62,63,64,65,66,67,68,69,79,80,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,152,-110,-109,152,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'EXTERN':([18,27,61,62,63,64,65,66,67,68,69,79,80,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,153,-110,-109,153,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'TYPEDEF':([18,27,61,62,63,64,65,66,67,68,69,79,80,143,145,146,147,148,149,150,151,152,153,154,155,156,192,207,],[-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,154,-110,-109,154,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,-111,]),'CONST':([18,27,61,62,63,64,65,66,67,68,69,79,80,143,145,146,147,148,149,150,151,152,153,154,155,156,192,198,199,207,213,],[-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,155,-110,-109,155,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,155,-125,-111,-124,]),'VOLATILE':([18,27,61,62,63,64,65,66,67,68,69,79,80,143,145,146,147,148,149,150,151,152,153,154,155,156,192,198,199,207,213,],[-86,-105,-77,-78,-79,-80,-81,-82,-83,-84,-85,156,-110,-109,156,-116,-133,-134,-135,-138,-139,-140,-141,-142,-136,-137,-115,156,-125,-111,-124,]),'RIGHTSQRBRACKET':([25,26,28,29,30,31,36,37,44,45,46,48,52,53,54,55,56,57,58,70,103,104,105,107,108,109,113,115,116,117,132,137,141,163,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,203,204,218,230,235,],[-132,-2,-4,-69,-39,-6,-41,-18,-43,-12,-13,-45,-47,-49,-51,-54,-59,-62,-65,-16,-20,-21,-7,-8,-9,-10,-14,-22,-23,-24,-15,-69,-3,-5,-42,203,-44,-46,-48,-50,-52,-53,-55,-56,-57,-58,-60,-61,-63,-64,-66,-67,-68,-70,-19,-11,-40,236,238,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'mainFunc':([0,],[1,]),'statement':([6,72,142,186,187,216,217,239,],[8,134,189,205,206,226,227,241,]),'labeledStatement':([6,72,142,186,187,216,217,239,],[9,9,9,9,9,9,9,9,]),'expressionStatement':([6,72,142,186,187,216,217,239,],[10,10,10,10,10,10,10,10,]),'compoundStatement':([6,72,142,186,187,216,217,239,],[11,11,11,11,11,11,11,11,]),'selectionStatement':([6,72,142,186,187,216,217,239,],[12,12,12,12,12,12,12,12,]),'jumpStatement':([6,72,142,186,187,216,217,239,],[13,13,13,13,13,13,13,13,]),'identifier':([6,7,23,24,32,33,34,35,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,195,202,209,216,217,239,],[14,70,70,87,70,70,70,70,14,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,14,70,70,14,14,211,70,70,14,14,14,]),'caseList':([6,72,142,186,187,216,217,239,],[15,15,15,15,15,15,15,15,]),'expression':([6,7,23,72,100,102,106,110,138,142,157,159,186,187,216,217,239,],[16,59,85,16,164,166,59,59,59,16,200,201,16,16,16,16,16,]),'empty':([6,7,15,18,23,32,33,34,35,72,74,75,78,79,81,82,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,145,157,159,186,187,198,202,206,208,209,216,217,221,226,227,237,239,],[17,71,76,80,71,71,71,71,71,17,71,140,71,144,158,160,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,17,197,71,71,17,17,215,71,220,222,71,17,17,197,232,234,240,17,]),'oscope':([6,72,142,186,187,216,217,239,],[18,18,18,18,18,18,18,18,]),'assignmentExpression':([6,7,23,72,78,88,100,102,106,110,138,142,157,159,186,187,209,216,217,239,],[26,26,26,26,141,163,26,26,26,26,26,26,26,26,26,26,223,26,26,26,]),'conditionalExpression':([6,7,23,72,74,78,88,100,102,106,110,138,142,157,159,186,187,202,209,216,217,239,],[28,28,28,28,136,28,28,28,28,28,28,28,28,28,28,28,28,218,28,28,28,28,]),'unaryExpression':([6,7,23,32,33,34,35,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,202,209,216,217,239,],[29,29,29,105,107,108,109,29,137,29,29,29,137,29,29,29,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,29,29,29,29,29,29,137,29,29,29,29,]),'logicalOrExpression':([6,7,23,72,74,78,88,100,102,106,110,138,142,157,159,186,187,202,209,216,217,239,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'postfixExpression':([6,7,23,32,33,34,35,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,202,209,216,217,239,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'unaryOper':([6,7,23,32,33,34,35,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,202,209,216,217,239,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'logicalAndExpression':([6,7,23,72,74,78,88,100,101,102,106,110,138,142,157,159,186,187,202,209,216,217,239,],[36,36,36,36,36,36,36,36,165,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'primaryExpression':([6,7,23,32,33,34,35,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,202,209,216,217,239,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'inclusiveOrExpression':([6,7,23,72,74,78,88,100,101,102,106,110,111,138,142,157,159,186,187,202,209,216,217,239,],[44,44,44,44,44,44,44,44,44,44,44,44,168,44,44,44,44,44,44,44,44,44,44,44,]),'markid':([6,7,23,32,33,34,35,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,202,209,216,217,239,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'constant':([6,7,23,32,33,34,35,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,202,209,216,217,239,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'markstr':([6,7,23,32,33,34,35,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,202,209,216,217,239,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'exclusiveOrExpression':([6,7,23,72,74,78,88,100,101,102,106,110,111,112,138,142,157,159,186,187,202,209,216,217,239,],[48,48,48,48,48,48,48,48,48,48,48,48,48,169,48,48,48,48,48,48,48,48,48,48,48,]),'markint':([6,7,23,32,33,34,35,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,202,209,216,217,239,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'markfloat':([6,7,23,32,33,34,35,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,202,209,216,217,239,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'markchar':([6,7,23,32,33,34,35,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,202,209,216,217,239,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'andExpression':([6,7,23,72,74,78,88,100,101,102,106,110,111,112,114,138,142,157,159,186,187,202,209,216,217,239,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,170,52,52,52,52,52,52,52,52,52,52,52,]),'equalityExpression':([6,7,23,72,74,78,88,100,101,102,106,110,111,112,114,118,138,142,157,159,186,187,202,209,216,217,239,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,171,53,53,53,53,53,53,53,53,53,53,53,]),'relationalExpression':([6,7,23,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,138,142,157,159,186,187,202,209,216,217,239,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,172,173,54,54,54,54,54,54,54,54,54,54,54,]),'shiftExpression':([6,7,23,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,138,142,157,159,186,187,202,209,216,217,239,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,174,175,176,177,55,55,55,55,55,55,55,55,55,55,55,]),'additiveExpression':([6,7,23,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,138,142,157,159,186,187,202,209,216,217,239,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,178,179,56,56,56,56,56,56,56,56,56,56,56,]),'multiplicativeExpression':([6,7,23,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,138,142,157,159,186,187,202,209,216,217,239,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,180,181,57,57,57,57,57,57,57,57,57,57,57,]),'castExpression':([6,7,23,72,74,78,88,100,101,102,106,110,111,112,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,138,142,157,159,186,187,202,209,216,217,239,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,182,183,184,185,58,58,58,58,58,58,58,58,58,58,58,]),'simpleTypeName':([7,79,110,138,145,],[60,148,167,60,148,]),'default':([15,],[73,]),'declarationList':([18,],[79,]),'assignOper':([29,],[88,]),'constantExpression':([74,],[135,]),'defaultmark':([75,],[139,]),'statementList':([79,],[142,]),'declaration':([79,],[143,]),'decSpecList':([79,],[145,]),'decSpec':([79,145,],[146,192,]),'StorageClassSpec':([79,145,],[147,147,]),'typeQualifier':([79,145,198,],[149,149,214,]),'ifmark':([81,],[157,]),'switchmark':([82,],[159,]),'cscope':([142,],[188,]),'initDecList':([145,],[191,]),'initDec':([145,221,],[193,228,]),'declarator':([145,221,],[194,194,]),'pointerList':([145,221,],[195,195,]),'pointer':([145,221,],[196,196,]),'star':([145,221,],[198,198,]),'directDec':([195,],[210,]),'typeQualList':([198,],[212,]),'enddefault':([206,],[219,]),'markDec':([208,],[221,]),'arrayDec':([211,],[224,]),'endifmark':([226,],[231,]),'endswitchmark':([227,],[233,]),'elsemark':([237,],[239,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> mainFunc","S'",1,None,None,None),
  ('mainFunc -> INT DOLAR MAIN LPAREN RPAREN statement','mainFunc',6,'p_mainFunc','parser.py',43),
  ('expression -> assignmentExpression','expression',1,'p_expression','parser.py',50),
  ('expression -> expression COMMA assignmentExpression','expression',3,'p_expression','parser.py',51),
  ('assignmentExpression -> conditionalExpression','assignmentExpression',1,'p_assignmentExpression','parser.py',58),
  ('assignmentExpression -> unaryExpression assignOper assignmentExpression','assignmentExpression',3,'p_assignmentExpression','parser.py',59),
  ('unaryExpression -> postfixExpression','unaryExpression',1,'p_unaryExpression','parser.py',82),
  ('unaryExpression -> PLUSPLUS unaryExpression','unaryExpression',2,'p_unaryExpression','parser.py',83),
  ('unaryExpression -> MINUSMINUS unaryExpression','unaryExpression',2,'p_unaryExpression','parser.py',84),
  ('unaryExpression -> unaryOper unaryExpression','unaryExpression',2,'p_unaryExpression','parser.py',85),
  ('unaryExpression -> SIZEOF unaryExpression','unaryExpression',2,'p_unaryExpression','parser.py',86),
  ('unaryExpression -> SIZEOF LPAREN simpleTypeName RPAREN','unaryExpression',4,'p_unaryExpression','parser.py',87),
  ('primaryExpression -> markid','primaryExpression',1,'p_primaryExpression','parser.py',100),
  ('primaryExpression -> constant','primaryExpression',1,'p_primaryExpression','parser.py',101),
  ('primaryExpression -> markstr STRING','primaryExpression',2,'p_primaryExpression','parser.py',102),
  ('primaryExpression -> LPAREN expression RPAREN','primaryExpression',3,'p_primaryExpression','parser.py',103),
  ('markid -> identifier','markid',1,'p_markid','parser.py',112),
  ('markstr -> <empty>','markstr',0,'p_markstr','parser.py',117),
  ('postfixExpression -> primaryExpression','postfixExpression',1,'p_postfixExpression','parser.py',120),
  ('postfixExpression -> postfixExpression LEFTSQRBRACKET expression RIGHTSQRBRACKET','postfixExpression',4,'p_postfixExpression','parser.py',121),
  ('postfixExpression -> postfixExpression PLUSPLUS','postfixExpression',2,'p_postfixExpression','parser.py',122),
  ('postfixExpression -> postfixExpression MINUSMINUS','postfixExpression',2,'p_postfixExpression','parser.py',123),
  ('constant -> markint INTNUM','constant',2,'p_constant','parser.py',143),
  ('constant -> markfloat FLOATNUM','constant',2,'p_constant','parser.py',144),
  ('constant -> markchar CHAR_CONST','constant',2,'p_constant','parser.py',145),
  ('markint -> empty','markint',1,'p_markint','parser.py',149),
  ('markfloat -> empty','markfloat',1,'p_markfloat','parser.py',153),
  ('markchar -> empty','markchar',1,'p_markchar','parser.py',157),
  ('assignOper -> ASSIGNMENT','assignOper',1,'p_assignOper','parser.py',161),
  ('assignOper -> MULT_EQ','assignOper',1,'p_assignOper','parser.py',162),
  ('assignOper -> DIVIDE_EQ','assignOper',1,'p_assignOper','parser.py',163),
  ('assignOper -> MOD_EQ','assignOper',1,'p_assignOper','parser.py',164),
  ('assignOper -> PLUS_EQ','assignOper',1,'p_assignOper','parser.py',165),
  ('assignOper -> MINUS_EQ','assignOper',1,'p_assignOper','parser.py',166),
  ('assignOper -> GTEQ','assignOper',1,'p_assignOper','parser.py',167),
  ('assignOper -> LTEQ','assignOper',1,'p_assignOper','parser.py',168),
  ('assignOper -> AND_EQ','assignOper',1,'p_assignOper','parser.py',169),
  ('assignOper -> XOR_EQ','assignOper',1,'p_assignOper','parser.py',170),
  ('assignOper -> OR_EQ','assignOper',1,'p_assignOper','parser.py',171),
  ('conditionalExpression -> logicalOrExpression','conditionalExpression',1,'p_conditionalExpression','parser.py',175),
  ('conditionalExpression -> logicalOrExpression QUES_MARK expression COLON conditionalExpression','conditionalExpression',5,'p_conditionalExpression','parser.py',176),
  ('logicalOrExpression -> logicalAndExpression','logicalOrExpression',1,'p_logicalOrExpression','parser.py',181),
  ('logicalOrExpression -> logicalOrExpression OR logicalAndExpression','logicalOrExpression',3,'p_logicalOrExpression','parser.py',182),
  ('logicalAndExpression -> inclusiveOrExpression','logicalAndExpression',1,'p_logicalAndExpression','parser.py',203),
  ('logicalAndExpression -> logicalAndExpression AND inclusiveOrExpression','logicalAndExpression',3,'p_logicalAndExpression','parser.py',204),
  ('inclusiveOrExpression -> exclusiveOrExpression','inclusiveOrExpression',1,'p_inclusiveOrExpression','parser.py',225),
  ('inclusiveOrExpression -> inclusiveOrExpression BIT_OR exclusiveOrExpression','inclusiveOrExpression',3,'p_inclusiveOrExpression','parser.py',226),
  ('exclusiveOrExpression -> andExpression','exclusiveOrExpression',1,'p_exclusiveOrExpression','parser.py',247),
  ('exclusiveOrExpression -> exclusiveOrExpression BIT_XOR andExpression','exclusiveOrExpression',3,'p_exclusiveOrExpression','parser.py',248),
  ('andExpression -> equalityExpression','andExpression',1,'p_andExpression','parser.py',269),
  ('andExpression -> andExpression BIT_AND equalityExpression','andExpression',3,'p_andExpression','parser.py',270),
  ('equalityExpression -> relationalExpression','equalityExpression',1,'p_equalityExpression','parser.py',291),
  ('equalityExpression -> equalityExpression EQUAL relationalExpression','equalityExpression',3,'p_equalityExpression','parser.py',292),
  ('equalityExpression -> equalityExpression NEQUAL relationalExpression','equalityExpression',3,'p_equalityExpression','parser.py',293),
  ('relationalExpression -> shiftExpression','relationalExpression',1,'p_relationalExpression','parser.py',315),
  ('relationalExpression -> relationalExpression LT shiftExpression','relationalExpression',3,'p_relationalExpression','parser.py',316),
  ('relationalExpression -> relationalExpression GT shiftExpression','relationalExpression',3,'p_relationalExpression','parser.py',317),
  ('relationalExpression -> relationalExpression LTEQ shiftExpression','relationalExpression',3,'p_relationalExpression','parser.py',318),
  ('relationalExpression -> relationalExpression GTEQ shiftExpression','relationalExpression',3,'p_relationalExpression','parser.py',319),
  ('shiftExpression -> additiveExpression','shiftExpression',1,'p_shiftExpression','parser.py',340),
  ('shiftExpression -> shiftExpression LSHIFT additiveExpression','shiftExpression',3,'p_shiftExpression','parser.py',341),
  ('shiftExpression -> shiftExpression RSHIFT additiveExpression','shiftExpression',3,'p_shiftExpression','parser.py',342),
  ('additiveExpression -> multiplicativeExpression','additiveExpression',1,'p_additiveExpression','parser.py',363),
  ('additiveExpression -> additiveExpression U_PLUS multiplicativeExpression','additiveExpression',3,'p_additiveExpression','parser.py',364),
  ('additiveExpression -> additiveExpression U_MINUS multiplicativeExpression','additiveExpression',3,'p_additiveExpression','parser.py',365),
  ('multiplicativeExpression -> castExpression','multiplicativeExpression',1,'p_multiplicativeExpression','parser.py',391),
  ('multiplicativeExpression -> multiplicativeExpression TIMES castExpression','multiplicativeExpression',3,'p_multiplicativeExpression','parser.py',392),
  ('multiplicativeExpression -> multiplicativeExpression DIVIDE castExpression','multiplicativeExpression',3,'p_multiplicativeExpression','parser.py',393),
  ('multiplicativeExpression -> multiplicativeExpression MOD castExpression','multiplicativeExpression',3,'p_multiplicativeExpression','parser.py',394),
  ('castExpression -> unaryExpression','castExpression',1,'p_castExpression','parser.py',421),
  ('castExpression -> LPAREN simpleTypeName RPAREN castExpression','castExpression',4,'p_castExpression','parser.py',422),
  ('unaryOper -> TIMES','unaryOper',1,'p_unaryOper','parser.py',427),
  ('unaryOper -> BIT_AND','unaryOper',1,'p_unaryOper','parser.py',428),
  ('unaryOper -> U_PLUS','unaryOper',1,'p_unaryOper','parser.py',429),
  ('unaryOper -> U_MINUS','unaryOper',1,'p_unaryOper','parser.py',430),
  ('unaryOper -> NOT','unaryOper',1,'p_unaryOper','parser.py',431),
  ('unaryOper -> BIT_NOT','unaryOper',1,'p_unaryOper','parser.py',432),
  ('simpleTypeName -> CHAR','simpleTypeName',1,'p_simpleTypeName','parser.py',436),
  ('simpleTypeName -> SHORT','simpleTypeName',1,'p_simpleTypeName','parser.py',437),
  ('simpleTypeName -> INT','simpleTypeName',1,'p_simpleTypeName','parser.py',438),
  ('simpleTypeName -> LONG','simpleTypeName',1,'p_simpleTypeName','parser.py',439),
  ('simpleTypeName -> SIGNED','simpleTypeName',1,'p_simpleTypeName','parser.py',440),
  ('simpleTypeName -> UNSIGNED','simpleTypeName',1,'p_simpleTypeName','parser.py',441),
  ('simpleTypeName -> FLOAT','simpleTypeName',1,'p_simpleTypeName','parser.py',442),
  ('simpleTypeName -> DOUBLE','simpleTypeName',1,'p_simpleTypeName','parser.py',443),
  ('simpleTypeName -> VOID','simpleTypeName',1,'p_simpleTypeName','parser.py',444),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',451),
  ('statement -> labeledStatement','statement',1,'p_statement','parser.py',456),
  ('statement -> expressionStatement','statement',1,'p_statement','parser.py',457),
  ('statement -> compoundStatement','statement',1,'p_statement','parser.py',458),
  ('statement -> selectionStatement','statement',1,'p_statement','parser.py',459),
  ('statement -> jumpStatement','statement',1,'p_statement','parser.py',460),
  ('labeledStatement -> identifier COLON statement','labeledStatement',3,'p_labeledStatement','parser.py',465),
  ('labeledStatement -> caseList default','labeledStatement',2,'p_labeledStatement','parser.py',466),
  ('caseList -> caseList CASE constantExpression COLON statement','caseList',5,'p_caseList','parser.py',471),
  ('caseList -> empty','caseList',1,'p_caseList','parser.py',472),
  ('default -> DEFAULT defaultmark COLON statement enddefault','default',5,'p_default','parser.py',481),
  ('default -> empty','default',1,'p_default','parser.py',482),
  ('defaultmark -> empty','defaultmark',1,'p_defaultmark','parser.py',489),
  ('enddefault -> empty','enddefault',1,'p_enddefault','parser.py',493),
  ('constantExpression -> conditionalExpression','constantExpression',1,'p_constantExpression','parser.py',497),
  ('expressionStatement -> expression TERMINAL','expressionStatement',2,'p_expressionStatement','parser.py',502),
  ('expressionStatement -> empty','expressionStatement',1,'p_expressionStatement','parser.py',503),
  ('compoundStatement -> oscope declarationList statementList cscope','compoundStatement',4,'p_compoundStatement','parser.py',510),
  ('compoundStatement -> empty','compoundStatement',1,'p_compoundStatement','parser.py',511),
  ('oscope -> LEFTCURLYBRACKET','oscope',1,'p_oscope','parser.py',521),
  ('cscope -> RIGHTCURLYBRACKET','cscope',1,'p_cscope','parser.py',529),
  ('statementList -> statementList statement','statementList',2,'p_statementList','parser.py',534),
  ('statementList -> empty','statementList',1,'p_statementList','parser.py',535),
  ('declarationList -> declarationList declaration','declarationList',2,'p_declarationList','parser.py',543),
  ('declarationList -> empty','declarationList',1,'p_declarationList','parser.py',544),
  ('declaration -> decSpecList initDecList TERMINAL','declaration',3,'p_declaration','parser.py',552),
  ('initDecList -> initDecList COMMA markDec initDec','initDecList',4,'p_initDecList','parser.py',559),
  ('initDecList -> initDec','initDecList',1,'p_initDecList','parser.py',560),
  ('markDec -> empty','markDec',1,'p_markDec','parser.py',568),
  ('decSpecList -> decSpecList decSpec','decSpecList',2,'p_decSpecList','parser.py',572),
  ('decSpecList -> decSpec','decSpecList',1,'p_decSpecList','parser.py',573),
  ('initDec -> declarator','initDec',1,'p_initDec','parser.py',583),
  ('initDec -> declarator ASSIGNMENT assignmentExpression','initDec',3,'p_initDec','parser.py',584),
  ('declarator -> pointerList directDec','declarator',2,'p_declarator','parser.py',593),
  ('pointerList -> pointer','pointerList',1,'p_pointerList','parser.py',597),
  ('pointerList -> empty','pointerList',1,'p_pointerList','parser.py',598),
  ('pointer -> star typeQualList','pointer',2,'p_pointer','parser.py',603),
  ('pointer -> empty','pointer',1,'p_pointer','parser.py',604),
  ('star -> star TIMES','star',2,'p_star','parser.py',609),
  ('star -> TIMES','star',1,'p_star','parser.py',610),
  ('typeQualList -> typeQualifier','typeQualList',1,'p_typeQualList','parser.py',618),
  ('typeQualList -> empty','typeQualList',1,'p_typeQualList','parser.py',619),
  ('directDec -> identifier','directDec',1,'p_directDec','parser.py',626),
  ('directDec -> identifier arrayDec','directDec',2,'p_directDec','parser.py',627),
  ('arrayDec -> arrayDec LEFTSQRBRACKET INTNUM RIGHTSQRBRACKET','arrayDec',4,'p_arrayDec','parser.py',638),
  ('arrayDec -> LEFTSQRBRACKET INTNUM RIGHTSQRBRACKET','arrayDec',3,'p_arrayDec','parser.py',639),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',648),
  ('decSpec -> StorageClassSpec','decSpec',1,'p_decSpec','parser.py',677),
  ('decSpec -> simpleTypeName','decSpec',1,'p_decSpec','parser.py',678),
  ('decSpec -> typeQualifier','decSpec',1,'p_decSpec','parser.py',679),
  ('typeQualifier -> CONST','typeQualifier',1,'p_typeQualifier','parser.py',683),
  ('typeQualifier -> VOLATILE','typeQualifier',1,'p_typeQualifier','parser.py',684),
  ('StorageClassSpec -> AUTO','StorageClassSpec',1,'p_StorageClassSpec','parser.py',688),
  ('StorageClassSpec -> REGISTER','StorageClassSpec',1,'p_StorageClassSpec','parser.py',689),
  ('StorageClassSpec -> STATIC','StorageClassSpec',1,'p_StorageClassSpec','parser.py',690),
  ('StorageClassSpec -> EXTERN','StorageClassSpec',1,'p_StorageClassSpec','parser.py',691),
  ('StorageClassSpec -> TYPEDEF','StorageClassSpec',1,'p_StorageClassSpec','parser.py',692),
  ('selectionStatement -> IF LPAREN ifmark expression RPAREN statement endifmark','selectionStatement',7,'p_selectionStatement','parser.py',696),
  ('selectionStatement -> IF LPAREN ifmark expression RPAREN statement endifmark ELSE elsemark statement','selectionStatement',10,'p_selectionStatement','parser.py',697),
  ('selectionStatement -> SWITCH LPAREN switchmark expression RPAREN statement endswitchmark','selectionStatement',7,'p_selectionStatement','parser.py',698),
  ('ifmark -> empty','ifmark',1,'p_ifmark','parser.py',709),
  ('endifmark -> empty','endifmark',1,'p_endifmark','parser.py',713),
  ('elsemark -> empty','elsemark',1,'p_elsemark','parser.py',717),
  ('switchmark -> empty','switchmark',1,'p_switchmark','parser.py',721),
  ('endswitchmark -> empty','endswitchmark',1,'p_endswitchmark','parser.py',726),
  ('jumpStatement -> BREAK TERMINAL','jumpStatement',2,'p_jumpStatement','parser.py',730),
  ('jumpStatement -> CONTINUE TERMINAL','jumpStatement',2,'p_jumpStatement','parser.py',731),
  ('jumpStatement -> RETURN expression TERMINAL','jumpStatement',3,'p_jumpStatement','parser.py',732),
  ('jumpStatement -> RETURN TERMINAL','jumpStatement',2,'p_jumpStatement','parser.py',733),
  ('jumpStatement -> GOTO identifier TERMINAL','jumpStatement',3,'p_jumpStatement','parser.py',734),
]
